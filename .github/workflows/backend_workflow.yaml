name: Build and push backend image to artifact registry

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend_workflow.yaml"

jobs:
  # Build and deploy docker image to Artifact Registry
  deploy_backend_image:
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    outputs:
      access_token: ${{ steps.auth.outputs.access_token }}

    steps:
      - name: code checkout
        uses: actions/checkout@v4

      - name: Debug Information
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of the directory: $(ls -a)"
          echo "GitHub Event Name: $GITHUB_EVENT_NAME"
          echo "GitHub Ref: $GITHUB_REF"

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Build and push the docker image
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
        run: |
          gcloud auth configure-docker europe-north1-docker.pkg.dev
          docker build -t europe-north1-docker.pkg.dev/$PROJECT_ID/the-maze-go/backend:latest .
          docker push europe-north1-docker.pkg.dev/$PROJECT_ID/the-maze-go/backend:latest

  # Set up and deploy cloud run instance
  terraform_cloud_run:
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/terraform
    needs: deploy_backend_image
    steps:
      - name: code checkout
        uses: actions/checkout@v4

      # - id: "auth"
      #   name: "Authenticate to Google Cloud"
      #   uses: "google-github-actions/auth@v2"
      #   with:
      #     token_format: "access_token"
      #     workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      #     service_account: ${{ secrets.SERVICE_ACCOUNT }}
      #     export_default_credentials: true

      - name: "Set up terraform"
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Debug information
        run:

      - name: Terraform Apply
        env:
          TF_VAR_oidcToken: ${{ needs.deploy_backend_image.outputs.access_token }}
        run: |
          echo "Here comes the token"
          echo "$TF_VAR_oidcToken"
          terraform apply
